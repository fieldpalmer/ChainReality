{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7","program":"/home/loopmonkey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=ca219ebde50b00ba","-C","extra-filename=-ca219ebde50b00ba","--out-dir","/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps","-L","dependency=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps","--extern","bytes=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/libbytes-5a8b7b58e0739385.rmeta","--extern","futures_core=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/libfutures_core-49f18673972ca7dc.rmeta","--extern","futures_sink=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/libfutures_sink-cb1e548cf4ad8483.rmeta","--extern","log=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/liblog-f8abb66ffc16068c.rmeta","--extern","pin_project_lite=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/libpin_project_lite-9283102e9cf41fdf.rmeta","--extern","tokio=/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/libtokio-8a879e100a8397af.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/loopmonkey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/loopmonkey/Desktop/metaplex2/rust/token-metadata/program/target/rls/debug/deps/libtokio_util-ca219ebde50b00ba.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[12318907263622636401,16062216462113134828]},"crate_root":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src","external_crates":[{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":19,"id":{"name":"futures_core","disambiguator":[5379817704113274554,9394742847824156676]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":20,"id":{"name":"futures_sink","disambiguator":[4157207251483221295,16650034945535652086]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":21,"id":{"name":"tokio","disambiguator":[1438019960315455768,10949112157699508913]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":22,"id":{"name":"parking_lot","disambiguator":[11972403457300801978,1758780247611502292]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":23,"id":{"name":"instant","disambiguator":[15158806579186628613,11451831479258017744]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":24,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":25,"id":{"name":"lock_api","disambiguator":[13424315385657087585,9935736172137420554]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":26,"id":{"name":"scopeguard","disambiguator":[2489176029422886084,9277911216960919523]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":27,"id":{"name":"parking_lot_core","disambiguator":[8753222715551945318,17565649968449493283]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":28,"id":{"name":"smallvec","disambiguator":[6137931805136025359,12093233173373222076]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":29,"id":{"name":"libc","disambiguator":[17979534598225322993,162327449368998918]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","num":30,"id":{"name":"pin_project_lite","disambiguator":[11667251130240803622,11402799896671659243]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":31,"id":{"name":"mio","disambiguator":[8917126939985859416,4013926241583992832]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","num":32,"id":{"name":"log","disambiguator":[1497614942449303687,18379385341275479390]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":33,"id":{"name":"bytes","disambiguator":[5278496683070597953,12322384793655861641]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":34,"id":{"name":"once_cell","disambiguator":[9380674611068465841,3894211796339534519]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[15853864331894774721,9527516760197662159]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":36,"id":{"name":"memchr","disambiguator":[17994832096595576654,17145934487921315802]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":37,"id":{"name":"num_cpus","disambiguator":[3893266121790160545,5897018835980623072]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[16060312921824147525,10962134481878299382]}}],"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093902,"byte_end":14093912,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093951,"byte_end":14093958,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093997,"byte_end":14094004,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094166,"byte_end":14094172,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094174,"byte_end":14094185,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094233,"byte_end":14094243,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094292,"byte_end":14094303,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094365,"byte_end":14094385,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094387,"byte_end":14094412,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094461,"byte_end":14094471,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094473,"byte_end":14094488,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094553,"byte_end":14094570,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094572,"byte_end":14094594,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1379},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":496},{"krate":0,"index":14},{"krate":0,"index":378},{"krate":0,"index":447}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083630,"byte_end":14083683,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083684,"byte_end":14083687,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083688,"byte_end":14083763,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083764,"byte_end":14083829,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083830,"byte_end":14083833,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083834,"byte_end":14083914,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083915,"byte_end":14083990,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14083991,"byte_end":14084039,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084040,"byte_end":14084043,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084044,"byte_end":14084067,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084068,"byte_end":14084071,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084072,"byte_end":14084151,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084152,"byte_end":14084231,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084232,"byte_end":14084303,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084304,"byte_end":14084374,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084375,"byte_end":14084453,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084454,"byte_end":14084530,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084531,"byte_end":14084564,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084565,"byte_end":14084568,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084569,"byte_end":14084649,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084650,"byte_end":14084730,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084731,"byte_end":14084781,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084782,"byte_end":14084785,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084786,"byte_end":14084837,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084838,"byte_end":14084887,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084888,"byte_end":14084939,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084940,"byte_end":14084943,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14084944,"byte_end":14085009,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085010,"byte_end":14085013,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085014,"byte_end":14085091,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085092,"byte_end":14085133,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085134,"byte_end":14085137,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085138,"byte_end":14085218,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085219,"byte_end":14085298,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085299,"byte_end":14085377,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085378,"byte_end":14085457,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085458,"byte_end":14085472,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085473,"byte_end":14085476,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085477,"byte_end":14085556,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085557,"byte_end":14085636,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085637,"byte_end":14085654,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085655,"byte_end":14085658,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085659,"byte_end":14085736,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085737,"byte_end":14085816,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085817,"byte_end":14085894,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085895,"byte_end":14085965,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14085966,"byte_end":14086015,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086016,"byte_end":14086019,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086020,"byte_end":14086033,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086034,"byte_end":14086066,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086067,"byte_end":14086134,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086135,"byte_end":14086249,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086250,"byte_end":14086287,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086288,"byte_end":14086349,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086350,"byte_end":14086399,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086400,"byte_end":14086403,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086404,"byte_end":14086445,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086446,"byte_end":14086456,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086457,"byte_end":14086541,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086542,"byte_end":14086598,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086599,"byte_end":14086602,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086603,"byte_end":14086624,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086625,"byte_end":14086692,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086693,"byte_end":14086721,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086722,"byte_end":14086735,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086736,"byte_end":14086754,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086755,"byte_end":14086764,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086765,"byte_end":14086768,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086769,"byte_end":14086828,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086829,"byte_end":14086853,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086854,"byte_end":14086863,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086864,"byte_end":14086869,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086870,"byte_end":14086878,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086879,"byte_end":14086886,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086887,"byte_end":14086961,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086962,"byte_end":14086965,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086966,"byte_end":14086988,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086989,"byte_end":14086992,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14086993,"byte_end":14087070,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087071,"byte_end":14087147,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087148,"byte_end":14087227,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087228,"byte_end":14087282,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087283,"byte_end":14087286,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087287,"byte_end":14087331,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087332,"byte_end":14087339,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087340,"byte_end":14087375,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087376,"byte_end":14087407,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087408,"byte_end":14087411,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087412,"byte_end":14087441,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087442,"byte_end":14087445,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087446,"byte_end":14087485,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087486,"byte_end":14087489,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087490,"byte_end":14087528,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087529,"byte_end":14087556,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087557,"byte_end":14087593,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087594,"byte_end":14087597,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087598,"byte_end":14087616,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087617,"byte_end":14087639,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087640,"byte_end":14087670,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087671,"byte_end":14087725,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087726,"byte_end":14087756,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087757,"byte_end":14087814,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087815,"byte_end":14087847,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087848,"byte_end":14087861,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087862,"byte_end":14087865,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087866,"byte_end":14087900,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087901,"byte_end":14087945,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087946,"byte_end":14087998,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14087999,"byte_end":14088066,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088067,"byte_end":14088070,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088071,"byte_end":14088145,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088146,"byte_end":14088212,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088213,"byte_end":14088242,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088243,"byte_end":14088290,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088291,"byte_end":14088343,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088344,"byte_end":14088415,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088416,"byte_end":14088435,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088436,"byte_end":14088449,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088450,"byte_end":14088453,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088454,"byte_end":14088493,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088494,"byte_end":14088549,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088550,"byte_end":14088568,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088569,"byte_end":14088645,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088646,"byte_end":14088712,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088713,"byte_end":14088765,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088766,"byte_end":14088769,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088770,"byte_end":14088850,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088851,"byte_end":14088876,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088877,"byte_end":14088909,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088910,"byte_end":14088923,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088924,"byte_end":14088927,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14088928,"byte_end":14089000,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089001,"byte_end":14089027,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089028,"byte_end":14089079,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089080,"byte_end":14089116,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089117,"byte_end":14089120,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089121,"byte_end":14089199,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089200,"byte_end":14089243,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089244,"byte_end":14089291,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089292,"byte_end":14089328,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089329,"byte_end":14089373,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089374,"byte_end":14089430,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089431,"byte_end":14089479,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089480,"byte_end":14089502,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089503,"byte_end":14089521,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089522,"byte_end":14089535,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089536,"byte_end":14089545,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089546,"byte_end":14089551,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089552,"byte_end":14089559,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089560,"byte_end":14089563,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089564,"byte_end":14089587,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089588,"byte_end":14089591,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089592,"byte_end":14089670,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089671,"byte_end":14089744,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089745,"byte_end":14089821,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089822,"byte_end":14089902,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089903,"byte_end":14089919,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089920,"byte_end":14089923,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14089924,"byte_end":14090004,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090005,"byte_end":14090084,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090085,"byte_end":14090165,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090166,"byte_end":14090238,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090239,"byte_end":14090242,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090243,"byte_end":14090320,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090321,"byte_end":14090399,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090400,"byte_end":14090473,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090474,"byte_end":14090540,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090541,"byte_end":14090544,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090545,"byte_end":14090558,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090559,"byte_end":14090592,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090593,"byte_end":14090627,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090628,"byte_end":14090665,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090666,"byte_end":14090733,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090734,"byte_end":14090769,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090770,"byte_end":14090831,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090832,"byte_end":14090878,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090879,"byte_end":14090940,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090941,"byte_end":14090944,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090945,"byte_end":14090973,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090974,"byte_end":14090977,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14090978,"byte_end":14091019,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091020,"byte_end":14091030,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091031,"byte_end":14091055,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091056,"byte_end":14091130,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091131,"byte_end":14091173,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091174,"byte_end":14091188,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091189,"byte_end":14091246,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091247,"byte_end":14091296,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091297,"byte_end":14091311,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091312,"byte_end":14091349,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091350,"byte_end":14091401,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091402,"byte_end":14091448,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091449,"byte_end":14091479,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091480,"byte_end":14091494,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091495,"byte_end":14091504,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091505,"byte_end":14091510,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091511,"byte_end":14091518,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091519,"byte_end":14091526,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091527,"byte_end":14091602,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091603,"byte_end":14091676,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091677,"byte_end":14091719,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091720,"byte_end":14091723,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091724,"byte_end":14091746,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091747,"byte_end":14091750,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091751,"byte_end":14091828,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091829,"byte_end":14091905,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091906,"byte_end":14091982,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14091983,"byte_end":14092006,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092007,"byte_end":14092010,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092011,"byte_end":14092056,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092057,"byte_end":14092064,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092065,"byte_end":14092100,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092101,"byte_end":14092125,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092126,"byte_end":14092129,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092130,"byte_end":14092159,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092160,"byte_end":14092163,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092164,"byte_end":14092203,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092204,"byte_end":14092207,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092208,"byte_end":14092254,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092255,"byte_end":14092291,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092292,"byte_end":14092295,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092296,"byte_end":14092387,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092388,"byte_end":14092462,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092463,"byte_end":14092485,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092486,"byte_end":14092519,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092520,"byte_end":14092567,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092568,"byte_end":14092620,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092621,"byte_end":14092696,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092697,"byte_end":14092716,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092717,"byte_end":14092730,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092731,"byte_end":14092734,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092735,"byte_end":14092787,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092788,"byte_end":14092865,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092866,"byte_end":14092930,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092931,"byte_end":14092934,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092935,"byte_end":14092978,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14092979,"byte_end":14093019,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093020,"byte_end":14093023,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093024,"byte_end":14093081,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093082,"byte_end":14093128,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093129,"byte_end":14093180,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093181,"byte_end":14093199,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093200,"byte_end":14093209,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093210,"byte_end":14093215,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093216,"byte_end":14093223,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093224,"byte_end":14093227,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093228,"byte_end":14093267,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093268,"byte_end":14093309,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093310,"byte_end":14093346,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093347,"byte_end":14093379,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093380,"byte_end":14093476,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093477,"byte_end":14093528,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093529,"byte_end":14093582,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093583,"byte_end":14093626,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093627,"byte_end":14093671,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093672,"byte_end":14093720,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093721,"byte_end":14093769,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093770,"byte_end":14093816,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14093817,"byte_end":14093856,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095880,"byte_end":14095890,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094723,"byte_end":14094808,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094809,"byte_end":14094812,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094813,"byte_end":14094851,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094852,"byte_end":14094890,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094891,"byte_end":14094894,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094895,"byte_end":14094908,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094909,"byte_end":14094912,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094913,"byte_end":14094994,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094995,"byte_end":14094998,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14094999,"byte_end":14095038,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095039,"byte_end":14095072,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095073,"byte_end":14095102,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095103,"byte_end":14095106,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095107,"byte_end":14095114,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095115,"byte_end":14095133,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095134,"byte_end":14095164,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095165,"byte_end":14095189,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095190,"byte_end":14095197,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095198,"byte_end":14095227,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095228,"byte_end":14095280,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095281,"byte_end":14095284,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095285,"byte_end":14095303,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095304,"byte_end":14095321,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095322,"byte_end":14095402,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095403,"byte_end":14095437,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095438,"byte_end":14095491,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095492,"byte_end":14095503,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095504,"byte_end":14095511,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095512,"byte_end":14095517,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095518,"byte_end":14095565,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095566,"byte_end":14095619,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095620,"byte_end":14095678,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095679,"byte_end":14095758,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095759,"byte_end":14095771,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095772,"byte_end":14095779,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095780,"byte_end":14095787,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095788,"byte_end":14095791,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095992,"byte_end":14095995,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095919,"byte_end":14095980,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097995,"byte_end":14098002,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096710,"byte_end":14096745,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096746,"byte_end":14096749,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096750,"byte_end":14096819,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096820,"byte_end":14096899,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096900,"byte_end":14096972,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096973,"byte_end":14096997,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14096998,"byte_end":14097001,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097002,"byte_end":14097070,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097071,"byte_end":14097148,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097149,"byte_end":14097210,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097211,"byte_end":14097214,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097215,"byte_end":14097276,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097277,"byte_end":14097339,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097340,"byte_end":14097343,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097344,"byte_end":14097407,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097408,"byte_end":14097471,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097472,"byte_end":14097551,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097552,"byte_end":14097626,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097627,"byte_end":14097646,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097647,"byte_end":14097650,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097651,"byte_end":14097719,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097720,"byte_end":14097782,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097783,"byte_end":14097858,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097859,"byte_end":14097898,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097899,"byte_end":14097902,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097903,"byte_end":14097939,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14097940,"byte_end":14097984,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098050,"byte_end":14098054,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098009,"byte_end":14098040,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098820,"byte_end":14098825,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098061,"byte_end":14098113,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098118,"byte_end":14098121,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098126,"byte_end":14098195,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098200,"byte_end":14098270,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098275,"byte_end":14098321,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098326,"byte_end":14098329,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098334,"byte_end":14098410,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098415,"byte_end":14098490,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098495,"byte_end":14098570,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098575,"byte_end":14098615,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098620,"byte_end":14098623,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098628,"byte_end":14098702,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098707,"byte_end":14098753,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098758,"byte_end":14098761,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098766,"byte_end":14098810,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101761,"byte_end":14101767,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098849,"byte_end":14098914,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098919,"byte_end":14098922,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14098927,"byte_end":14099001,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099006,"byte_end":14099078,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099083,"byte_end":14099156,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099161,"byte_end":14099204,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099209,"byte_end":14099212,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099217,"byte_end":14099290,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099295,"byte_end":14099358,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099363,"byte_end":14099438,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099443,"byte_end":14099518,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099523,"byte_end":14099546,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099551,"byte_end":14099554,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099559,"byte_end":14099631,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099636,"byte_end":14099710,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099715,"byte_end":14099785,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099790,"byte_end":14099793,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099798,"byte_end":14099866,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099871,"byte_end":14099942,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14099947,"byte_end":14100027,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100032,"byte_end":14100044,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100049,"byte_end":14100052,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100057,"byte_end":14100127,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100132,"byte_end":14100207,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100212,"byte_end":14100249,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100254,"byte_end":14100257,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100262,"byte_end":14100298,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100303,"byte_end":14100347,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100352,"byte_end":14100355,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100360,"byte_end":14100383,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100388,"byte_end":14100391,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100396,"byte_end":14100470,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100475,"byte_end":14100549,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100554,"byte_end":14100607,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100612,"byte_end":14100615,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100620,"byte_end":14100691,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100696,"byte_end":14100766,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100771,"byte_end":14100787,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100792,"byte_end":14100795,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100800,"byte_end":14100813,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100818,"byte_end":14100836,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100841,"byte_end":14100846,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100851,"byte_end":14100877,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100882,"byte_end":14100919,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100924,"byte_end":14100929,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100934,"byte_end":14100955,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100960,"byte_end":14100965,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14100970,"byte_end":14101000,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101005,"byte_end":14101019,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101024,"byte_end":14101055,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101060,"byte_end":14101093,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101098,"byte_end":14101101,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101106,"byte_end":14101199,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101204,"byte_end":14101222,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101227,"byte_end":14101230,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101235,"byte_end":14101307,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101312,"byte_end":14101372,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101377,"byte_end":14101429,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101434,"byte_end":14101496,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101501,"byte_end":14101568,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101573,"byte_end":14101576,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101581,"byte_end":14101609,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101614,"byte_end":14101623,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101628,"byte_end":14101633,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101638,"byte_end":14101645,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101650,"byte_end":14101653,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101658,"byte_end":14101727,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101732,"byte_end":14101753,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102933,"byte_end":14102943,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101848,"byte_end":14101920,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101925,"byte_end":14101974,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101979,"byte_end":14101982,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14101987,"byte_end":14102055,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102060,"byte_end":14102127,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102132,"byte_end":14102200,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102205,"byte_end":14102281,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102286,"byte_end":14102352,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102357,"byte_end":14102360,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102365,"byte_end":14102433,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102438,"byte_end":14102513,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102518,"byte_end":14102593,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102598,"byte_end":14102670,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102675,"byte_end":14102717,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102722,"byte_end":14102725,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102730,"byte_end":14102805,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102810,"byte_end":14102888,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14102893,"byte_end":14102925,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104551,"byte_end":14104557,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103361,"byte_end":14103441,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103446,"byte_end":14103522,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103527,"byte_end":14103530,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103535,"byte_end":14103610,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103615,"byte_end":14103685,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103690,"byte_end":14103761,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103766,"byte_end":14103838,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103843,"byte_end":14103901,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103906,"byte_end":14103909,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103914,"byte_end":14103983,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14103988,"byte_end":14104063,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104068,"byte_end":14104144,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104149,"byte_end":14104171,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104176,"byte_end":14104179,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104184,"byte_end":14104257,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104262,"byte_end":14104335,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104340,"byte_end":14104416,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104421,"byte_end":14104424,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104429,"byte_end":14104465,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104470,"byte_end":14104502,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":14104507,"byte_end":14104543,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104891,"byte_end":14104898,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104736,"byte_end":14104808,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104809,"byte_end":14104829,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104830,"byte_end":14104833,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104834,"byte_end":14104880,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105163,"byte_end":14105168,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104911,"byte_end":14104943,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104948,"byte_end":14104951,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14104956,"byte_end":14105033,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105038,"byte_end":14105094,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105099,"byte_end":14105102,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105107,"byte_end":14105153,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105519,"byte_end":14105525,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105192,"byte_end":14105237,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105242,"byte_end":14105245,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105250,"byte_end":14105324,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105329,"byte_end":14105409,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105414,"byte_end":14105452,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105457,"byte_end":14105460,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":14105465,"byte_end":14105511,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116342,"byte_end":14116348,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1489}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118121,"byte_end":14118124,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116490,"byte_end":14116570,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116575,"byte_end":14116656,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116661,"byte_end":14116664,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116669,"byte_end":14116744,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116749,"byte_end":14116819,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116824,"byte_end":14116893,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116898,"byte_end":14116970,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116975,"byte_end":14117033,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117038,"byte_end":14117041,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117046,"byte_end":14117117,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117122,"byte_end":14117199,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117204,"byte_end":14117280,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117285,"byte_end":14117307,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117312,"byte_end":14117315,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117320,"byte_end":14117393,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117398,"byte_end":14117471,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117476,"byte_end":14117552,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117557,"byte_end":14117560,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117565,"byte_end":14117641,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117646,"byte_end":14117722,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117727,"byte_end":14117802,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117807,"byte_end":14117842,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117847,"byte_end":14117850,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117855,"byte_end":14117891,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117896,"byte_end":14117928,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117933,"byte_end":14117970,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14117975,"byte_end":14118013,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118018,"byte_end":14118109,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119732,"byte_end":14119745,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118337,"byte_end":14118417,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118422,"byte_end":14118503,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118508,"byte_end":14118557,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118562,"byte_end":14118565,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118570,"byte_end":14118645,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118650,"byte_end":14118720,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118725,"byte_end":14118794,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118799,"byte_end":14118871,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118876,"byte_end":14118934,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118939,"byte_end":14118942,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14118947,"byte_end":14119018,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119023,"byte_end":14119100,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119105,"byte_end":14119181,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119186,"byte_end":14119208,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119213,"byte_end":14119216,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119221,"byte_end":14119294,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119299,"byte_end":14119372,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119377,"byte_end":14119453,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119458,"byte_end":14119461,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119466,"byte_end":14119502,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119507,"byte_end":14119539,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119544,"byte_end":14119581,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119586,"byte_end":14119624,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14119629,"byte_end":14119720,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121848,"byte_end":14121858,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120271,"byte_end":14120351,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120356,"byte_end":14120437,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120442,"byte_end":14120445,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120450,"byte_end":14120525,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120530,"byte_end":14120600,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120605,"byte_end":14120676,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120681,"byte_end":14120753,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120758,"byte_end":14120816,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120821,"byte_end":14120824,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120829,"byte_end":14120900,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120905,"byte_end":14120982,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120987,"byte_end":14121063,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121068,"byte_end":14121090,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121095,"byte_end":14121098,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121103,"byte_end":14121182,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121187,"byte_end":14121264,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121269,"byte_end":14121272,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121277,"byte_end":14121350,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121355,"byte_end":14121428,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121433,"byte_end":14121509,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121514,"byte_end":14121517,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121522,"byte_end":14121558,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121563,"byte_end":14121595,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121600,"byte_end":14121638,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121643,"byte_end":14121681,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121686,"byte_end":14121740,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14121745,"byte_end":14121836,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122493,"byte_end":14122500,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122210,"byte_end":14122273,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122278,"byte_end":14122291,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122296,"byte_end":14122299,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122304,"byte_end":14122379,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122384,"byte_end":14122454,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122459,"byte_end":14122481,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122844,"byte_end":14122851,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122553,"byte_end":14122624,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122629,"byte_end":14122642,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122647,"byte_end":14122650,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122655,"byte_end":14122730,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122735,"byte_end":14122805,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122810,"byte_end":14122832,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123214,"byte_end":14123225,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122916,"byte_end":14122994,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14122999,"byte_end":14123012,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123017,"byte_end":14123020,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123025,"byte_end":14123100,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123105,"byte_end":14123175,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123180,"byte_end":14123202,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123572,"byte_end":14123577,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123321,"byte_end":14123379,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123384,"byte_end":14123397,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123402,"byte_end":14123405,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123410,"byte_end":14123484,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123489,"byte_end":14123560,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123889,"byte_end":14123898,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123630,"byte_end":14123696,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123701,"byte_end":14123714,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123719,"byte_end":14123722,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123727,"byte_end":14123801,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123806,"byte_end":14123877,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124018,"byte_end":14124029,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14123963,"byte_end":14124006,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124164,"byte_end":14124179,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124101,"byte_end":14124152,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124319,"byte_end":14124331,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124263,"byte_end":14124307,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124468,"byte_end":14124484,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124404,"byte_end":14124456,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124834,"byte_end":14124844,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124569,"byte_end":14124632,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124637,"byte_end":14124640,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124645,"byte_end":14124720,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124725,"byte_end":14124795,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124800,"byte_end":14124822,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125216,"byte_end":14125226,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124894,"byte_end":14124968,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14124973,"byte_end":14125014,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125019,"byte_end":14125022,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125027,"byte_end":14125102,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125107,"byte_end":14125177,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125182,"byte_end":14125204,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127200,"byte_end":14127211,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14126885,"byte_end":14126956,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14126957,"byte_end":14127029,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127030,"byte_end":14127090,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127091,"byte_end":14127094,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127095,"byte_end":14127131,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127149,"byte_end":14127188,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127297,"byte_end":14127299,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127224,"byte_end":14127288,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127331,"byte_end":14127336,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127309,"byte_end":14127322,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127401,"byte_end":14127409,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127346,"byte_end":14127392,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127496,"byte_end":14127505,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127426,"byte_end":14127487,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127738,"byte_end":14127741,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127686,"byte_end":14127726,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14128470,"byte_end":14128480,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14128731,"byte_end":14128734,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14128663,"byte_end":14128719,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129082,"byte_end":14129095,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14128966,"byte_end":14129048,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129053,"byte_end":14129070,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129809,"byte_end":14129816,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129522,"byte_end":14129585,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129590,"byte_end":14129607,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129612,"byte_end":14129615,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129620,"byte_end":14129695,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129700,"byte_end":14129770,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129775,"byte_end":14129797,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130164,"byte_end":14130171,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129869,"byte_end":14129940,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129945,"byte_end":14129962,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129967,"byte_end":14129970,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129975,"byte_end":14130050,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130055,"byte_end":14130125,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130130,"byte_end":14130152,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130538,"byte_end":14130549,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130236,"byte_end":14130314,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130319,"byte_end":14130336,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130341,"byte_end":14130344,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130349,"byte_end":14130424,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130429,"byte_end":14130499,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130504,"byte_end":14130526,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130914,"byte_end":14130924,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130645,"byte_end":14130712,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130717,"byte_end":14130720,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130725,"byte_end":14130800,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130805,"byte_end":14130875,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130880,"byte_end":14130902,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131036,"byte_end":14131043,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14130974,"byte_end":14131024,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131166,"byte_end":14131177,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131096,"byte_end":14131154,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131297,"byte_end":14131308,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131242,"byte_end":14131285,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131438,"byte_end":14131453,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131375,"byte_end":14131426,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14133554,"byte_end":14133565,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1407}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14133772,"byte_end":14133775,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14133703,"byte_end":14133760,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134333,"byte_end":14134340,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134045,"byte_end":14134108,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134113,"byte_end":14134131,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134136,"byte_end":14134139,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134144,"byte_end":14134219,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134224,"byte_end":14134294,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134299,"byte_end":14134321,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134689,"byte_end":14134696,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134393,"byte_end":14134464,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134469,"byte_end":14134487,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134492,"byte_end":14134495,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134500,"byte_end":14134575,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134580,"byte_end":14134650,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134655,"byte_end":14134677,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135064,"byte_end":14135075,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134761,"byte_end":14134839,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134844,"byte_end":14134862,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134867,"byte_end":14134870,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134875,"byte_end":14134950,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134955,"byte_end":14135025,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135030,"byte_end":14135052,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135441,"byte_end":14135451,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135171,"byte_end":14135239,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135244,"byte_end":14135247,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135252,"byte_end":14135327,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135332,"byte_end":14135402,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135407,"byte_end":14135429,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135563,"byte_end":14135570,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135501,"byte_end":14135551,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135693,"byte_end":14135704,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135623,"byte_end":14135681,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135825,"byte_end":14135837,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135769,"byte_end":14135813,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135968,"byte_end":14135984,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14135904,"byte_end":14135956,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1218},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":994},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137511,"byte_end":14137563,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137564,"byte_end":14137567,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137568,"byte_end":14137638,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137639,"byte_end":14137697,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137698,"byte_end":14137770,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137771,"byte_end":14137841,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137842,"byte_end":14137909,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137910,"byte_end":14137913,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137914,"byte_end":14137935,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137936,"byte_end":14137939,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14137940,"byte_end":14138015,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138016,"byte_end":14138087,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138088,"byte_end":14138159,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138160,"byte_end":14138230,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138231,"byte_end":14138271,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138272,"byte_end":14138275,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138276,"byte_end":14138283,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138284,"byte_end":14138327,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138328,"byte_end":14138386,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138387,"byte_end":14138390,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138391,"byte_end":14138446,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138447,"byte_end":14138489,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138490,"byte_end":14138495,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138496,"byte_end":14138548,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138549,"byte_end":14138554,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138555,"byte_end":14138577,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138578,"byte_end":14138585,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138586,"byte_end":14138589,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138590,"byte_end":14138662,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138663,"byte_end":14138734,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138735,"byte_end":14138754,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138755,"byte_end":14138758,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138759,"byte_end":14138770,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138771,"byte_end":14138820,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138821,"byte_end":14138870,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138871,"byte_end":14138920,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138921,"byte_end":14138928,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138929,"byte_end":14138932,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138933,"byte_end":14138971,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138972,"byte_end":14138975,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138976,"byte_end":14138983,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14138984,"byte_end":14139027,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139028,"byte_end":14139086,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139087,"byte_end":14139090,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139091,"byte_end":14139116,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139117,"byte_end":14139138,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139139,"byte_end":14139142,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139143,"byte_end":14139219,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139220,"byte_end":14139229,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139230,"byte_end":14139272,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139273,"byte_end":14139278,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139279,"byte_end":14139352,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139353,"byte_end":14139400,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139401,"byte_end":14139404,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139405,"byte_end":14139442,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139443,"byte_end":14139457,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139458,"byte_end":14139463,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139464,"byte_end":14139471,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139472,"byte_end":14139475,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139476,"byte_end":14139518,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139519,"byte_end":14139522,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139523,"byte_end":14139534,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139535,"byte_end":14139574,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139575,"byte_end":14139614,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139615,"byte_end":14139654,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139655,"byte_end":14139662,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139663,"byte_end":14139666,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139667,"byte_end":14139681,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139682,"byte_end":14139685,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139686,"byte_end":14139761,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139762,"byte_end":14139835,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139836,"byte_end":14139902,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139903,"byte_end":14139972,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14139973,"byte_end":14140038,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140039,"byte_end":14140042,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140043,"byte_end":14140059,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140060,"byte_end":14140063,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140064,"byte_end":14140140,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140141,"byte_end":14140182,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140183,"byte_end":14140186,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140187,"byte_end":14140194,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140195,"byte_end":14140226,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140227,"byte_end":14140277,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140278,"byte_end":14140319,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140320,"byte_end":14140355,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140356,"byte_end":14140404,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140405,"byte_end":14140436,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140437,"byte_end":14140485,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140486,"byte_end":14140535,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140536,"byte_end":14140558,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140559,"byte_end":14140566,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140567,"byte_end":14140589,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140590,"byte_end":14140597,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140598,"byte_end":14140601,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140602,"byte_end":14140650,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140651,"byte_end":14140654,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140655,"byte_end":14140666,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140667,"byte_end":14140719,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140720,"byte_end":14140785,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140786,"byte_end":14140851,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140852,"byte_end":14140917,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140918,"byte_end":14140925,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140926,"byte_end":14140929,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14140930,"byte_end":14141006,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141007,"byte_end":14141081,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141082,"byte_end":14141154,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141155,"byte_end":14141231,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141232,"byte_end":14141274,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141275,"byte_end":14141278,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141279,"byte_end":14141295,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141296,"byte_end":14141299,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141300,"byte_end":14141375,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141376,"byte_end":14141417,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141418,"byte_end":14141421,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141422,"byte_end":14141429,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141430,"byte_end":14141461,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141462,"byte_end":14141512,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141513,"byte_end":14141554,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141555,"byte_end":14141590,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141591,"byte_end":14141639,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141640,"byte_end":14141671,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141672,"byte_end":14141720,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141721,"byte_end":14141780,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141781,"byte_end":14141803,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141804,"byte_end":14141811,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141812,"byte_end":14141834,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141835,"byte_end":14141842,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141843,"byte_end":14141846,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141847,"byte_end":14141895,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141896,"byte_end":14141899,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141900,"byte_end":14141911,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141912,"byte_end":14141961,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14141962,"byte_end":14142016,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142017,"byte_end":14142071,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142072,"byte_end":14142126,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142127,"byte_end":14142134,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142135,"byte_end":14142138,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142139,"byte_end":14142212,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142213,"byte_end":14142280,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142281,"byte_end":14142284,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142285,"byte_end":14142301,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142302,"byte_end":14142305,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142306,"byte_end":14142382,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142383,"byte_end":14142455,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142456,"byte_end":14142495,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142496,"byte_end":14142499,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142500,"byte_end":14142507,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142508,"byte_end":14142539,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142540,"byte_end":14142590,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142591,"byte_end":14142632,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142633,"byte_end":14142668,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142669,"byte_end":14142717,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142718,"byte_end":14142749,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142750,"byte_end":14142797,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142798,"byte_end":14142818,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142819,"byte_end":14142841,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142842,"byte_end":14142849,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142850,"byte_end":14142872,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142873,"byte_end":14142880,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142881,"byte_end":14142884,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142885,"byte_end":14142933,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142934,"byte_end":14142937,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142938,"byte_end":14142949,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14142950,"byte_end":14143002,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143003,"byte_end":14143068,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143069,"byte_end":14143134,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143135,"byte_end":14143200,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143201,"byte_end":14143208,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143209,"byte_end":14143212,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143213,"byte_end":14143285,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143286,"byte_end":14143361,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143362,"byte_end":14143434,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143435,"byte_end":14143511,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143512,"byte_end":14143585,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143586,"byte_end":14143589,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143590,"byte_end":14143606,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143607,"byte_end":14143610,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143611,"byte_end":14143685,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143686,"byte_end":14143753,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143754,"byte_end":14143757,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143758,"byte_end":14143765,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143766,"byte_end":14143797,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143798,"byte_end":14143848,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143849,"byte_end":14143890,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143891,"byte_end":14143926,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143927,"byte_end":14143975,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14143976,"byte_end":14144007,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144008,"byte_end":14144056,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144057,"byte_end":14144077,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144078,"byte_end":14144100,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144101,"byte_end":14144108,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144109,"byte_end":14144131,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144132,"byte_end":14144139,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144140,"byte_end":14144143,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144144,"byte_end":14144192,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144193,"byte_end":14144196,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144197,"byte_end":14144208,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144209,"byte_end":14144235,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144236,"byte_end":14144281,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144282,"byte_end":14144327,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144328,"byte_end":14144373,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144374,"byte_end":14144377,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144378,"byte_end":14144406,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144407,"byte_end":14144452,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144453,"byte_end":14144498,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144499,"byte_end":14144544,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144545,"byte_end":14144552,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144553,"byte_end":14144556,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144557,"byte_end":14144629,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144630,"byte_end":14144706,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144707,"byte_end":14144777,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144778,"byte_end":14144847,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144848,"byte_end":14144885,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144886,"byte_end":14144889,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144890,"byte_end":14144964,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14144965,"byte_end":14145019,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145020,"byte_end":14145023,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145024,"byte_end":14145040,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145041,"byte_end":14145044,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145045,"byte_end":14145118,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145119,"byte_end":14145195,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145196,"byte_end":14145270,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145271,"byte_end":14145284,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145285,"byte_end":14145288,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145289,"byte_end":14145296,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145297,"byte_end":14145328,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145329,"byte_end":14145379,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145380,"byte_end":14145421,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145422,"byte_end":14145457,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145458,"byte_end":14145507,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145508,"byte_end":14145539,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145540,"byte_end":14145588,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145589,"byte_end":14145633,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145634,"byte_end":14145656,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145657,"byte_end":14145664,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145665,"byte_end":14145687,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145688,"byte_end":14145695,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145696,"byte_end":14145699,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145700,"byte_end":14145748,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145749,"byte_end":14145752,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145753,"byte_end":14145764,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145765,"byte_end":14145791,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145792,"byte_end":14145842,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145843,"byte_end":14145893,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145894,"byte_end":14145944,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145945,"byte_end":14145948,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145949,"byte_end":14145969,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14145970,"byte_end":14146000,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146001,"byte_end":14146031,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146032,"byte_end":14146062,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146063,"byte_end":14146070,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146071,"byte_end":14146074,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146075,"byte_end":14146148,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146149,"byte_end":14146224,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146225,"byte_end":14146297,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146298,"byte_end":14146336,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146337,"byte_end":14146340,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146341,"byte_end":14146415,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146416,"byte_end":14146492,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146493,"byte_end":14146566,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146567,"byte_end":14146595,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146596,"byte_end":14146599,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146600,"byte_end":14146616,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146617,"byte_end":14146620,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146621,"byte_end":14146694,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146695,"byte_end":14146771,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146772,"byte_end":14146846,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146847,"byte_end":14146919,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146920,"byte_end":14146931,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146932,"byte_end":14146935,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146936,"byte_end":14146943,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146944,"byte_end":14146975,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14146976,"byte_end":14147026,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147027,"byte_end":14147068,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147069,"byte_end":14147104,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147105,"byte_end":14147154,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147155,"byte_end":14147186,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147187,"byte_end":14147252,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147253,"byte_end":14147273,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147274,"byte_end":14147296,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147297,"byte_end":14147304,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147305,"byte_end":14147312,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147313,"byte_end":14147316,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147317,"byte_end":14147365,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147366,"byte_end":14147369,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147370,"byte_end":14147381,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147382,"byte_end":14147408,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147409,"byte_end":14147459,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147460,"byte_end":14147510,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147511,"byte_end":14147561,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147562,"byte_end":14147565,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147566,"byte_end":14147586,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147587,"byte_end":14147617,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147618,"byte_end":14147648,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147649,"byte_end":14147679,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147680,"byte_end":14147687,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147688,"byte_end":14147691,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147692,"byte_end":14147765,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147766,"byte_end":14147840,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147841,"byte_end":14147915,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147916,"byte_end":14147989,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14147990,"byte_end":14148066,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148067,"byte_end":14148100,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148101,"byte_end":14148104,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148105,"byte_end":14148121,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148122,"byte_end":14148125,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148126,"byte_end":14148200,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148201,"byte_end":14148268,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148269,"byte_end":14148272,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148273,"byte_end":14148280,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148281,"byte_end":14148312,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148313,"byte_end":14148363,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148364,"byte_end":14148405,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148406,"byte_end":14148441,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148442,"byte_end":14148490,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148491,"byte_end":14148522,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148523,"byte_end":14148570,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148571,"byte_end":14148617,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148618,"byte_end":14148640,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148641,"byte_end":14148648,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148649,"byte_end":14148671,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148672,"byte_end":14148679,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148680,"byte_end":14148683,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148684,"byte_end":14148732,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148733,"byte_end":14148736,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148737,"byte_end":14148748,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148749,"byte_end":14148805,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148806,"byte_end":14148867,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148868,"byte_end":14148929,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148930,"byte_end":14148991,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14148992,"byte_end":14148999,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149000,"byte_end":14149003,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149004,"byte_end":14149078,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149079,"byte_end":14149099,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149100,"byte_end":14149103,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149104,"byte_end":14149118,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149119,"byte_end":14149122,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149123,"byte_end":14149198,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149199,"byte_end":14149271,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149272,"byte_end":14149340,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149341,"byte_end":14149417,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149418,"byte_end":14149459,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149460,"byte_end":14149463,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149464,"byte_end":14149534,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149535,"byte_end":14149553,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149554,"byte_end":14149557,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149558,"byte_end":14149565,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149566,"byte_end":14149598,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149599,"byte_end":14149649,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149650,"byte_end":14149694,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149695,"byte_end":14149708,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149709,"byte_end":14149744,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149745,"byte_end":14149776,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149777,"byte_end":14149800,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149801,"byte_end":14149808,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149809,"byte_end":14149831,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149832,"byte_end":14149839,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149840,"byte_end":14149843,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149844,"byte_end":14149894,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149895,"byte_end":14149898,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149899,"byte_end":14149910,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149911,"byte_end":14149944,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149945,"byte_end":14149978,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14149979,"byte_end":14150012,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150013,"byte_end":14150020,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150021,"byte_end":14150024,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150025,"byte_end":14150094,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150095,"byte_end":14150132,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150133,"byte_end":14150172,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150173,"byte_end":14150218,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150219,"byte_end":14150266,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150267,"byte_end":14150297,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150298,"byte_end":14150331,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150893,"byte_end":14150900,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150575,"byte_end":14150630,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150631,"byte_end":14150634,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150635,"byte_end":14150710,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150711,"byte_end":14150791,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14150792,"byte_end":14150851,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151571,"byte_end":14151596,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151486,"byte_end":14151559,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151941,"byte_end":14151961,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151617,"byte_end":14151691,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151692,"byte_end":14151695,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151696,"byte_end":14151775,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151776,"byte_end":14151819,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151820,"byte_end":14151823,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151824,"byte_end":14151877,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151878,"byte_end":14151881,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14151882,"byte_end":14151912,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152305,"byte_end":14152308,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152214,"byte_end":14152293,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152535,"byte_end":14152542,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152432,"byte_end":14152507,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152512,"byte_end":14152523,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152764,"byte_end":14152780,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152592,"byte_end":14152633,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152638,"byte_end":14152641,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152646,"byte_end":14152719,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152724,"byte_end":14152752,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14153201,"byte_end":14153221,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152845,"byte_end":14152879,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152884,"byte_end":14152887,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152892,"byte_end":14152962,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152967,"byte_end":14153042,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14153047,"byte_end":14153119,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14153124,"byte_end":14153189,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158476,"byte_end":14158479,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14157934,"byte_end":14158009,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158014,"byte_end":14158025,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158030,"byte_end":14158033,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158038,"byte_end":14158052,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158057,"byte_end":14158060,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158065,"byte_end":14158072,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158077,"byte_end":14158108,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158113,"byte_end":14158161,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158166,"byte_end":14158169,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158174,"byte_end":14158215,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158220,"byte_end":14158255,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158260,"byte_end":14158291,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158296,"byte_end":14158327,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158332,"byte_end":14158361,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158366,"byte_end":14158386,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158391,"byte_end":14158413,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158418,"byte_end":14158425,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158430,"byte_end":14158452,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14158457,"byte_end":14158464,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159664,"byte_end":14159674,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159143,"byte_end":14159192,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159197,"byte_end":14159200,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159205,"byte_end":14159237,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159242,"byte_end":14159245,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159250,"byte_end":14159318,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159323,"byte_end":14159326,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159331,"byte_end":14159345,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159350,"byte_end":14159353,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159358,"byte_end":14159365,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159370,"byte_end":14159401,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159406,"byte_end":14159454,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159459,"byte_end":14159462,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159467,"byte_end":14159508,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159513,"byte_end":14159548,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159553,"byte_end":14159574,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159579,"byte_end":14159601,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159606,"byte_end":14159613,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159618,"byte_end":14159640,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159645,"byte_end":14159652,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160306,"byte_end":14160319,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159773,"byte_end":14159825,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159830,"byte_end":14159833,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159838,"byte_end":14159876,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159881,"byte_end":14159884,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159889,"byte_end":14159957,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159962,"byte_end":14159965,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159970,"byte_end":14159984,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159989,"byte_end":14159992,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14159997,"byte_end":14160004,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160009,"byte_end":14160040,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160045,"byte_end":14160093,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160098,"byte_end":14160101,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160106,"byte_end":14160147,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160152,"byte_end":14160187,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160192,"byte_end":14160216,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160221,"byte_end":14160243,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160248,"byte_end":14160255,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160260,"byte_end":14160282,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160287,"byte_end":14160294,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160952,"byte_end":14160965,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160419,"byte_end":14160471,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160476,"byte_end":14160479,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160484,"byte_end":14160522,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160527,"byte_end":14160530,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160535,"byte_end":14160603,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160608,"byte_end":14160611,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160616,"byte_end":14160630,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160635,"byte_end":14160638,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160643,"byte_end":14160650,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160655,"byte_end":14160686,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160691,"byte_end":14160739,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160744,"byte_end":14160747,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160752,"byte_end":14160793,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160798,"byte_end":14160833,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160838,"byte_end":14160862,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160867,"byte_end":14160889,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160894,"byte_end":14160901,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160906,"byte_end":14160928,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14160933,"byte_end":14160940,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162046,"byte_end":14162062,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161134,"byte_end":14161163,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161168,"byte_end":14161171,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161176,"byte_end":14161248,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161253,"byte_end":14161278,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161283,"byte_end":14161286,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161291,"byte_end":14161363,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161368,"byte_end":14161437,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161442,"byte_end":14161515,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161520,"byte_end":14161532,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161537,"byte_end":14161540,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161545,"byte_end":14161620,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161625,"byte_end":14161686,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161691,"byte_end":14161694,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161699,"byte_end":14161713,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161718,"byte_end":14161721,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161726,"byte_end":14161733,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161738,"byte_end":14161769,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161774,"byte_end":14161822,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161827,"byte_end":14161830,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161835,"byte_end":14161876,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161881,"byte_end":14161916,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161921,"byte_end":14161956,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161961,"byte_end":14161983,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14161988,"byte_end":14161995,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162000,"byte_end":14162022,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162027,"byte_end":14162034,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162723,"byte_end":14162742,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162159,"byte_end":14162222,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162227,"byte_end":14162230,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162235,"byte_end":14162286,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162291,"byte_end":14162294,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162299,"byte_end":14162367,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162372,"byte_end":14162375,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162380,"byte_end":14162394,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162399,"byte_end":14162402,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162407,"byte_end":14162414,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162419,"byte_end":14162450,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162455,"byte_end":14162503,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162508,"byte_end":14162511,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162516,"byte_end":14162557,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162562,"byte_end":14162597,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162602,"byte_end":14162633,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162638,"byte_end":14162660,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162665,"byte_end":14162672,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162677,"byte_end":14162699,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162704,"byte_end":14162711,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163401,"byte_end":14163420,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162911,"byte_end":14162977,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162982,"byte_end":14162985,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14162990,"byte_end":14163045,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163050,"byte_end":14163053,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163058,"byte_end":14163072,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163077,"byte_end":14163080,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163085,"byte_end":14163092,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163097,"byte_end":14163128,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163133,"byte_end":14163181,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163186,"byte_end":14163189,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163194,"byte_end":14163235,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163240,"byte_end":14163275,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163280,"byte_end":14163311,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163316,"byte_end":14163338,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163343,"byte_end":14163350,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163355,"byte_end":14163377,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163382,"byte_end":14163389,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163974,"byte_end":14163991,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163523,"byte_end":14163596,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163601,"byte_end":14163619,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163624,"byte_end":14163627,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163632,"byte_end":14163646,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163651,"byte_end":14163654,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163659,"byte_end":14163666,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163671,"byte_end":14163702,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163707,"byte_end":14163755,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163760,"byte_end":14163763,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163768,"byte_end":14163809,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163814,"byte_end":14163849,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163854,"byte_end":14163884,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163889,"byte_end":14163911,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163916,"byte_end":14163923,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163928,"byte_end":14163950,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14163955,"byte_end":14163962,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164641,"byte_end":14164649,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164092,"byte_end":14164155,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164160,"byte_end":14164163,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164168,"byte_end":14164229,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164234,"byte_end":14164237,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164242,"byte_end":14164296,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164301,"byte_end":14164304,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164309,"byte_end":14164323,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164328,"byte_end":14164331,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164336,"byte_end":14164343,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164348,"byte_end":14164379,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164384,"byte_end":14164432,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164437,"byte_end":14164440,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164445,"byte_end":14164486,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164491,"byte_end":14164526,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164531,"byte_end":14164551,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164556,"byte_end":14164578,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164583,"byte_end":14164590,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164595,"byte_end":14164617,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164622,"byte_end":14164629,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165169,"byte_end":14165178,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164747,"byte_end":14164810,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164815,"byte_end":14164818,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164823,"byte_end":14164837,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164842,"byte_end":14164845,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164850,"byte_end":14164857,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164862,"byte_end":14164910,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164915,"byte_end":14164936,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164941,"byte_end":14164976,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14164981,"byte_end":14165012,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165017,"byte_end":14165048,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165053,"byte_end":14165082,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165087,"byte_end":14165107,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165112,"byte_end":14165133,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165138,"byte_end":14165145,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165150,"byte_end":14165157,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165834,"byte_end":14165842,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165330,"byte_end":14165383,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165388,"byte_end":14165391,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165396,"byte_end":14165410,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165415,"byte_end":14165418,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165423,"byte_end":14165430,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165435,"byte_end":14165466,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165471,"byte_end":14165519,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165524,"byte_end":14165527,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165532,"byte_end":14165573,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165578,"byte_end":14165613,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165618,"byte_end":14165649,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165654,"byte_end":14165685,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165690,"byte_end":14165719,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165724,"byte_end":14165744,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165749,"byte_end":14165771,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165776,"byte_end":14165783,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165788,"byte_end":14165810,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14165815,"byte_end":14165822,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166415,"byte_end":14166424,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166006,"byte_end":14166060,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166065,"byte_end":14166068,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166073,"byte_end":14166087,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166092,"byte_end":14166095,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166100,"byte_end":14166107,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166112,"byte_end":14166144,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166149,"byte_end":14166199,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166204,"byte_end":14166248,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166253,"byte_end":14166288,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166293,"byte_end":14166324,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166329,"byte_end":14166352,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166357,"byte_end":14166364,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166369,"byte_end":14166391,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166396,"byte_end":14166403,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167033,"byte_end":14167043,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166585,"byte_end":14166634,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166639,"byte_end":14166642,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166647,"byte_end":14166661,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166666,"byte_end":14166669,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166674,"byte_end":14166681,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166686,"byte_end":14166731,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166736,"byte_end":14166786,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166791,"byte_end":14166847,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166852,"byte_end":14166865,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166870,"byte_end":14166905,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166910,"byte_end":14166941,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166946,"byte_end":14166970,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166975,"byte_end":14166982,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14166987,"byte_end":14167009,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167014,"byte_end":14167021,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14168422,"byte_end":14168432,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14168179,"byte_end":14168266,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14168267,"byte_end":14168270,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14168271,"byte_end":14168309,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14168310,"byte_end":14168348,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169532,"byte_end":14169535,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169113,"byte_end":14169173,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169178,"byte_end":14169181,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169186,"byte_end":14169196,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169201,"byte_end":14169204,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169209,"byte_end":14169281,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169286,"byte_end":14169359,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169364,"byte_end":14169431,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169436,"byte_end":14169439,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169444,"byte_end":14169520,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170666,"byte_end":14170685,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169693,"byte_end":14169753,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169758,"byte_end":14169761,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169766,"byte_end":14169829,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169834,"byte_end":14169912,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169917,"byte_end":14169984,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169989,"byte_end":14170061,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170066,"byte_end":14170136,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170141,"byte_end":14170164,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170169,"byte_end":14170172,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170177,"byte_end":14170187,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170192,"byte_end":14170195,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170200,"byte_end":14170275,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170280,"byte_end":14170353,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170358,"byte_end":14170434,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170439,"byte_end":14170512,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170517,"byte_end":14170587,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170592,"byte_end":14170595,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170600,"byte_end":14170654,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171251,"byte_end":14171261,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170813,"byte_end":14170863,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170868,"byte_end":14170871,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170876,"byte_end":14170883,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170888,"byte_end":14170907,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170912,"byte_end":14170950,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170955,"byte_end":14170958,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14170963,"byte_end":14170997,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171002,"byte_end":14171049,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171054,"byte_end":14171061,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171066,"byte_end":14171073,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171078,"byte_end":14171116,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171121,"byte_end":14171124,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171129,"byte_end":14171182,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171187,"byte_end":14171227,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171232,"byte_end":14171239,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175586,"byte_end":14175607,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175540,"byte_end":14175581,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175642,"byte_end":14175644,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175613,"byte_end":14175637,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175518,"byte_end":14175533,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175436,"byte_end":14175491,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177566,"byte_end":14177583,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176380,"byte_end":14176521,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176522,"byte_end":14176525,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176526,"byte_end":14176564,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176565,"byte_end":14176603,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176604,"byte_end":14176607,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176608,"byte_end":14176621,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176622,"byte_end":14176689,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176690,"byte_end":14176693,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176694,"byte_end":14176727,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176728,"byte_end":14176757,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176758,"byte_end":14176761,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176762,"byte_end":14176769,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176770,"byte_end":14176826,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176827,"byte_end":14176861,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176862,"byte_end":14176865,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176866,"byte_end":14176871,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176872,"byte_end":14176919,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176920,"byte_end":14176973,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14176974,"byte_end":14177051,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177052,"byte_end":14177087,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177088,"byte_end":14177109,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177110,"byte_end":14177160,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177161,"byte_end":14177224,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177225,"byte_end":14177288,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177289,"byte_end":14177352,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177353,"byte_end":14177409,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177410,"byte_end":14177459,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177460,"byte_end":14177472,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177473,"byte_end":14177480,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177481,"byte_end":14177488,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14177489,"byte_end":14177492,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178918,"byte_end":14178921,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178476,"byte_end":14178544,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178549,"byte_end":14178552,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178557,"byte_end":14178567,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178572,"byte_end":14178575,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178580,"byte_end":14178659,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178664,"byte_end":14178738,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178743,"byte_end":14178810,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178815,"byte_end":14178818,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178823,"byte_end":14178906,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180232,"byte_end":14180251,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179201,"byte_end":14179269,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179274,"byte_end":14179277,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179282,"byte_end":14179352,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179357,"byte_end":14179443,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179448,"byte_end":14179518,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179523,"byte_end":14179600,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179605,"byte_end":14179675,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179680,"byte_end":14179703,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179708,"byte_end":14179711,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179716,"byte_end":14179726,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179731,"byte_end":14179734,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179739,"byte_end":14179821,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179826,"byte_end":14179899,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179904,"byte_end":14179981,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14179986,"byte_end":14180059,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180064,"byte_end":14180139,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180144,"byte_end":14180147,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180152,"byte_end":14180220,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14181039,"byte_end":14181049,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180508,"byte_end":14180559,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180564,"byte_end":14180567,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180572,"byte_end":14180579,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180584,"byte_end":14180603,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180608,"byte_end":14180653,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180658,"byte_end":14180661,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180666,"byte_end":14180738,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180743,"byte_end":14180790,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180795,"byte_end":14180802,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180807,"byte_end":14180814,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180819,"byte_end":14180864,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180869,"byte_end":14180872,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180877,"byte_end":14180970,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14180975,"byte_end":14181015,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14181020,"byte_end":14181027,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185144,"byte_end":14185166,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185097,"byte_end":14185139,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185202,"byte_end":14185204,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185172,"byte_end":14185197,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185068,"byte_end":14185090,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14184985,"byte_end":14185041,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":375}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1387},{"krate":0,"index":1396},{"krate":0,"index":1400},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1387},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1393}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095902,"byte_end":14095912,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14096063,"byte_end":14096073,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14096400,"byte_end":14096410,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14106588,"byte_end":14106597,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14106797,"byte_end":14106807,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14106958,"byte_end":14106967,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107290,"byte_end":14107300,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107546,"byte_end":14107554,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107651,"byte_end":14107659,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107770,"byte_end":14107778,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107878,"byte_end":14107886,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107996,"byte_end":14108006,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14113588,"byte_end":14113598,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116434,"byte_end":14116440,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120252,"byte_end":14120258,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125573,"byte_end":14125579,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125895,"byte_end":14125901,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14126616,"byte_end":14126622,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127662,"byte_end":14127673,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14128600,"byte_end":14128610,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129499,"byte_end":14129509,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131606,"byte_end":14131616,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131929,"byte_end":14131939,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14132665,"byte_end":14132675,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14133654,"byte_end":14133665,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134021,"byte_end":14134032,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14136141,"byte_end":14136152,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14136916,"byte_end":14136927,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14137168,"byte_end":14137179,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152187,"byte_end":14152207,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14155540,"byte_end":14155560,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14156446,"byte_end":14156466,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14157807,"byte_end":14157827,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14157920,"byte_end":14157927,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167526,"byte_end":14167533,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167659,"byte_end":14167684,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167842,"byte_end":14167867,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14168002,"byte_end":14168027,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169096,"byte_end":14169106,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171648,"byte_end":14171658,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175034,"byte_end":14175044,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175367,"byte_end":14175377,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175682,"byte_end":14175697,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175979,"byte_end":14175994,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14176111,"byte_end":14176126,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178452,"byte_end":14178469,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14181118,"byte_end":14181135,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14184427,"byte_end":14184444,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14184808,"byte_end":14184825,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185242,"byte_end":14185264,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185593,"byte_end":14185615,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185746,"byte_end":14185768,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":14094314,"byte_end":14094330,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14095902,"byte_end":14095912,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14096063,"byte_end":14096073,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":14096400,"byte_end":14096410,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14106588,"byte_end":14106597,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14106797,"byte_end":14106807,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14106958,"byte_end":14106967,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107290,"byte_end":14107300,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107546,"byte_end":14107554,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107651,"byte_end":14107659,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107770,"byte_end":14107778,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107878,"byte_end":14107886,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14107996,"byte_end":14108006,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1536},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":14113588,"byte_end":14113598,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1536},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14116434,"byte_end":14116440,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14120252,"byte_end":14120258,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125573,"byte_end":14125579,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1486},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14125895,"byte_end":14125901,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1486},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14126616,"byte_end":14126622,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":14127662,"byte_end":14127673,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14128600,"byte_end":14128610,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14129499,"byte_end":14129509,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131606,"byte_end":14131616,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1445},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14131929,"byte_end":14131939,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1445},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":14132665,"byte_end":14132675,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14133654,"byte_end":14133665,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14134021,"byte_end":14134032,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14136141,"byte_end":14136152,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1404},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14136916,"byte_end":14136927,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1404},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":14137168,"byte_end":14137179,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1404},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14152187,"byte_end":14152207,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14155540,"byte_end":14155560,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14156446,"byte_end":14156466,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14157807,"byte_end":14157827,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14157920,"byte_end":14157927,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167526,"byte_end":14167533,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167659,"byte_end":14167684,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14167842,"byte_end":14167867,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":14168002,"byte_end":14168027,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14169096,"byte_end":14169106,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14171648,"byte_end":14171658,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175034,"byte_end":14175044,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175367,"byte_end":14175377,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175682,"byte_end":14175697,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14175979,"byte_end":14175994,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":14176111,"byte_end":14176126,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14178452,"byte_end":14178469,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14181118,"byte_end":14181135,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":546}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14184427,"byte_end":14184444,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14184808,"byte_end":14184825,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185242,"byte_end":14185264,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185593,"byte_end":14185615,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":14185746,"byte_end":14185768,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1300},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1379},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":286},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1387},"to":{"krate":21,"index":224}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1387},"to":{"krate":21,"index":182}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1387},"to":{"krate":21,"index":263}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1387},"to":{"krate":21,"index":303}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1387},"to":{"krate":19,"index":96}}]}